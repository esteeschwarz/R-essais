name: cache inst dep + build pages
on:
  push:
    branches: [ pages ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
      #using: 'node20'
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: echo "testcache, hit!=true"

    - name: general action
      run: echo "from here on"
     # shell: Rscript{0}

    # - name: Install dependencies
    #   run: npm install

    # - name: Build
    #   run: npm run build
    # - name: Test
    #   run: npm test
  #   - name: R CMD check
  #     run: |
  #       #installed.packages()
  #       print("test command")
  #     shell: Rscript {0}
    
  #   #########################

  #   - name: Setup Pages
  #     id: pages
  #     uses: actions/configure-pages@v4
  #   - name: build book
  #       #run: mdbook build -d ./mdbook/workflow/book
  #     run: |
  #          source("scripts/testrun.R")
  #          source("pages/knitpagesrmd.R")
  #     shell: Rscript {0} 
      
  #   - name: Upload artifact
  #     uses: actions/upload-pages-artifact@v2
  #     with:
  #         path: ./pages
  #     # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2