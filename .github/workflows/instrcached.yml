name: instrcached R cached
on:
  push:
    branches: [ pages ]
  pull_request:
    branches: [ main ]
#name: R-CMD-check
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    #  env: 
     #  testcacher
    steps:
      - uses: actions/checkout@v4
      #- uses: r-lib/actions/setup-r@master
       # with:
        #    r-version: '4.2'
      - uses: r-lib/actions/setup-pandoc@v2
  
      - name: md libdir
        run: |
              mkdir rlibs
      - name: Cache R packages
        id: cache-r
#        if: runner.os != 'Windows'
        uses: actions/cache@v3
        # env: 
        #   cache-name: testcacher
        with:
         #path: ${{ env.R_LIBS_USER }}
          path: rlibs

          key: ${{ runner.os }}-r-3.6.1-${{ hashFiles('rdependencies.csv') }}
          restore-keys: ${{ runner.os }}-r-3.6.1-
      
      - if: ${{ steps.cache-r.outputs.cache-hit != 'true' }}
        run: |
             print("new not cached pkg")
             dep<-read.csv("rdependencies.csv")
             rlib<-"rlibs"
             repos<-'https://cloud.r-project.org'
             dep.array<-dep$pkg[dep$chk!=1]
             for(k in 1:length(dep.array)){
             install.packages(dep.array[k],lib=rlib,repos=repos)
             }
             
             #install.packages('remotes', lib='rlibs',repos = 'https://cloud.r-project.org')
             #library(remotes, lib.loc="rlibs") 
             #saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds')
        shell: Rscript {0}
#       - name: Cache R packages
#         id: cache-r
# #        if: runner.os != 'Windows'
#         uses: actions/cache@v3
#         # env: 
#         #   cache-name: testcacher
#         with:
#          #path: ${{ env.R_LIBS_USER }}
#           path: rlibs

#           key: ${{ runner.os }}-r-3.6.1-${{ hashFiles('depends.Rds') }}
#           restore-keys: ${{ runner.os }}-r-3.6.1-
      
#       - if: ${{ steps.cache-r.outputs.cache-hit != 'true' }}
#         run: | 
#           echo "testcache, hit!=true"
         # RScript -e 'installed.libraries()' > rlibsinst.txt  

    #  - name: Install packages
        # run:  |
        #   install.packages('rmarkdown', lib='rlibs',repos = 'https://cloud.r-project.org')
        #   install.packages('markdown', lib='rlibs',repos = 'https://cloud.r-project.org')
        # shell: Rscript {0}
      - name: build pages
        id: pages
        uses: actions/configure-pages@v4
      - name: build text
        run: |
             source("scripts/testrun.R")
        shell: Rscript {0}
      - name: getlibs
        run: |
             print("libs da?")
        shell: Rscript {0}  
      # - name: build book
      #   #run: mdbook build -d ./mdbook/workflow/book
        
      #   run: |
      #      source("scripts/testrun.R")
      #      source("pages/knitpagesrmd.R")
      #   shell: Rscript {0} 
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./pages
      # Deployment job
      - name: Check
        run: |
            print("check last, removed all calls")
            # library(renv,lib.loc="rlibs")
            # library(rcmdcheck,lib.loc="rlibs")
            # renv::restore()
            # rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'error')
        shell: Rscript {0}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
 